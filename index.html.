<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Arcade Games</title>
<style>
body {
font-family: Arial, sans-serif;
background-color: #111;
color: white;
text-align: center;
padding: 50px;
}
h1 {
font-size: 3rem;
color: #00ff00;
text-shadow: 2px 2px 5px rgba(0, 255, 0, 0.8);
}
.game-links {
display: grid;
grid-template-columns: repeat(2, 1fr);
gap: 20px;
margin-top: 20px;
}
.game-link {
padding: 20px;
background: #222;
border-radius: 10px;
cursor: pointer;
text-align: center;
box-shadow: 0 0 10px rgba(0, 255, 0, 0.7);
transition: transform 0.2s ease;
}
.game-link:hover {
transform: scale(1.1);
}
</style>
</head>
<body>
<h1>Retro Arcade Games</h1>
<div class="game-links">
<div class="game-link" onclick="location.href='snake.html'">Snake</div>
<div class="game-link" onclick="location.href='pong.html'">Pong</div>
<div class="game-link" onclick="location.href='breakout.html'">Breakout</div>
<div class="game-link" onclick="location.href='space-invaders.html'">Space Invaders</div>
</div>
</body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Snake Game</title>
    <style>
        body {
            background-color: #111;
            color: white;
            text-align: center;
        }
        canvas {
            border: 2px solid #00ff00;
            display: block;
            margin: 50px auto;
        }
    </style>
</head>
<body>
    <h1>Snake Game</h1>
    <canvas id="gameCanvas" width="400" height="400"></canvas>
    <script>
        const canvas = document.getElementById('gameCanvas');
        const ctx = canvas.getContext('2d');

        const snakeSize = 20;
        let snake = [{ x: 160, y: 160 }];
        let food = { x: 200, y: 200 };
        let direction = 'RIGHT';
        let score = 0;

        // Handle snake movement
        document.addEventListener('keydown', (e) => {
            if (e.key === 'ArrowUp' && direction !== 'DOWN') direction = 'UP';
            if (e.key === 'ArrowDown' && direction !== 'UP') direction = 'DOWN';
            if (e.key === 'ArrowLeft' && direction !== 'RIGHT') direction = 'LEFT';
            if (e.key === 'ArrowRight' && direction !== 'LEFT') direction = 'RIGHT';
        });

        // Draw the snake and food
        function draw() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);

            // Move snake
            const head = { ...snake[0] };
            if (direction === 'UP') head.y -= snakeSize;
            if (direction === 'DOWN') head.y += snakeSize;
            if (direction === 'LEFT') head.x -= snakeSize;
            if (direction === 'RIGHT') head.x += snakeSize;

            // Add new head
            snake.unshift(head);

            // Eat food
            if (head.x === food.x && head.y === food.y) {
                score += 10;
                food = {
                    x: Math.floor(Math.random() * (canvas.width / snakeSize)) * snakeSize,
                    y: Math.floor(Math.random() * (canvas.height / snakeSize)) * snakeSize
                };
            } else {
                snake.pop();
            }

            // Check for collisions with walls or self
            if (
                head.x < 0 || head.x >= canvas.width ||
                head.y < 0 || head.y >= canvas.height ||
                snake.slice(1).some(s => s.x === head.x && s.y === head.y)
            ) {
                alert('Game Over! Final Score: ' + score);
                snake = [{ x: 160, y: 160 }];
                direction = 'RIGHT';
                score = 0;
            }

            // Draw snake
            ctx.fillStyle = 'lime';
            snake.forEach(segment => ctx.fillRect(segment.x, segment.y, snakeSize, snakeSize));

            // Draw food
            ctx.fillStyle = 'red';
            ctx.fillRect(food.x, food.y, snakeSize, snakeSize);

            // Draw score
            ctx.fillStyle = 'white';
            ctx.font = '20px Arial';
            ctx.fillText('Score: ' + score, 10, 20);
        }

        setInterval(draw, 100);
    </script>
</body>
</html>

